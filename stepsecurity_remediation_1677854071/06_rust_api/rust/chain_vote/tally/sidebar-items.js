window.SIDEBAR_ITEMS = {"fn":[["batch_decrypt","Decrypt a slice of `ValidatedTally`s, using a single baby-step giant-step table"]],"struct":[["DecryptionError",""],["EncryptedTally","`EncryptedTally` is formed by one ciphertext per existing option and a fingerprint that identifies the election parameters used (crs and election public key)"],["Tally","`Tally` represents the decrypted tally, with one `u64` result for each of the options of the election."],["TallyDecryptShare","`TallyDecryptShare` contains one decryption share per existing option. All committee members (todo: this will change once DKG is completed) need to submit a `TallyDecryptShare` in order to successfully decrypt the `EncryptedTally`."],["TallyError",""],["ValidatedTally","`ValidatedTally` can only be constructed by valid `TallyDecryptShare`s, and the corresponding `EncryptedTally`. This intermediate structure ensures that only validated decryptions are used to compute the election outcome, i.e. if the committee members do not present valid shares, the tally decryption cannot be computed. This intermediate structure is particularly of interest during the distributed decryption protocol, where, in case there is a misbehaving party, one needs to perform certain actions between the verification of a decryption share, and its use in the decrypted tally computation."]],"type":[["Crs","Submitted vote, which constists of an `EncryptedVote` and a ` Common Reference String"],["OpeningVoteKey","Secret key for opening vote"]]};